{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","timerIdChangeTime","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","Component","darkTheme","createTheme","palette","mode","DarkTheme","ThemeProvider","theme","CssBaseline","getRandomName","value","now","toString","App","hasClock","clockName","timerId","handleClick","handleContextmenu","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"0OAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAAQC,cAAcC,OAAO,IAAK,IAFjD,EAKEC,kBAAoB,EALtB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,kBAAoBE,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAER,MAAO,IAAIC,MAAQC,cAAcC,OAAO,IAAK,KAE7DM,QAAQC,KAAK,EAAKX,MAAMC,QACvB,OAZP,gCAeE,SAAmBW,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAlBpE,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,qBAvB9B,oBA0BE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAZ,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,WAvCX,GAA2BiB,aCJrBC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAIV,SAASC,IACP,OACE,eAACC,EAAA,EAAD,CAAeC,MAAON,EAAtB,UACE,cAACO,EAAA,EAAD,IACA,sEAKN,SAASC,IACP,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAW1B,OAAO,GAE3C,MAAM,SAAN,OAAgBwB,GAQX,IAAMG,EAAb,4MACE/B,MAAyB,CACvBgC,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAwBEC,YAAc,WACZ,EAAK1B,SAAS,CAAEuB,UAAU,KAzB9B,EA4BEI,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAK7B,SAAS,CAAEuB,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAelC,KAAK8B,mBAC9CG,SAASC,iBAAiB,QAASlC,KAAK6B,aAExC7B,KAAK4B,QAAU3B,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEwB,UAAWN,QAC1B,QAdP,kCAiBE,WACEpB,OAAOS,cAAcV,KAAK4B,SAE1BK,SAASE,oBAAoB,cAAenC,KAAK8B,mBACjDG,SAASE,oBAAoB,QAASnC,KAAK6B,eArB/C,oBAiCE,WACE,MAGI7B,KAAKN,MAFPgC,EADF,EACEA,SACAC,EAFF,EAEEA,UAGF,OAEE,sBAAKhB,UAAU,MAAf,UACE,cAACM,EAAD,IACA,6CACCS,GAAY,cAAC,EAAD,CAAOnB,KAAMoB,WA5ClC,GAAyBf,aC7BzBwB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.2bbb955f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: (new Date()).toUTCString().slice(-12, -4),\n  };\n\n  timerIdChangeTime = 0;\n\n  componentDidMount() {\n    this.timerIdChangeTime = window.setInterval(() => {\n      this.setState({ time: (new Date()).toUTCString().slice(-12, -4) });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdChangeTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Clock } from './Clock';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nfunction DarkTheme() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <main>This app is using the dark mode</main>\n    </ThemeProvider>\n  );\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\n  type State = {\n    hasClock: boolean,\n    clockName: string,\n  };\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextmenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <DarkTheme />\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}